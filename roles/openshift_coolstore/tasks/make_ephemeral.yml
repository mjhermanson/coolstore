---
# remove persistent storage
- name: list deployment configs in {{ project_name }}
  shell: "{{ openshift_cli }} get dc -o json -n {{ project_name }}"
  register: deploymentconfigs_list
  changed_when: false

- set_fact:
    dc_vol_list: "{{ deploymentconfigs_list.stdout | from_json | json_query('items[*].{\"dc\":metadata.name, \"vol\":spec.template.spec.volumes[?persistentVolumeClaim]}') }}"

- name: delete pvc and dc volumes in {{ project_name }}
  shell: |
    {{ openshift_cli }} set volume dc/{{ item.0.dc }} --name={{ item.1.name }} --add -t emptyDir --overwrite -n {{ project_name }}
    {{ openshift_cli }} delete pvc {{ item.1.persistentVolumeClaim.claimName }} -n {{ project_name }}
  when: item.0.vol is not none
  with_subelements: 
    - "{{ dc_vol_list | default([]) | json_query('[?vol != null]') }}"
    - vol

- name: list deployment configs that use database in {{ project_name }}
  shell: "{{ openshift_cli }} get dc -l uses-database=true -o json -n {{ project_name }}"
  register: deploymentconfigs_with_database_list
  changed_when: false

- name: redeploy pods that use database to re-init databases in {{ project_name }}
  shell: "{{ openshift_cli }} delete pod -l deploymentconfig={{ item.metadata.name }} -n {{ project_name }}"
  with_items: "{{ deploymentconfigs_with_database_list.stdout|default('[]')|from_json|json_query('items') }}"
